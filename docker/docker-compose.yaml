version: '3.7'
services:
  script:
    container_name: script
    build:
      context: ../services/api/script
      dockerfile: Dockerfile
    restart: never
    deploy:
      resources:
          limits:
            cpus: "1"
            memory: 150M
      replicas: 1
      restart_policy:
        max_attempts: 3
        condition: on-failure
      update_config:
        parallelism: 3
        delay: 10s
    networks:
      - scraps
    volumes:
      - /usr/app/scrapper/data/script:/usr/app/data
      - /usr/app/scrapper/data/script/logs:/usr/app/data
  api:
    container_name: api
    build:
      context: ../services/api
      dockerfile: Dockerfile
    ports:
      - ${API_PORT}:${API_PORT}
    restart: always
    deploy:
      resources:
          limits:
            cpus: "2"
            # app will crash if enough memory is not provided
            # memory: 150M
      replicas: 1
      restart_policy:
        max_attempts: 3
        condition: on-failure
      update_config:
        parallelism: 3
        delay: 10s
    networks:
      - scraps
    user: root
    volumes:
      - /usr/app/scrapper/data/api:/usr/app/data
      - /usr/app/scrapper/data/api/logs:/usr/app/data/logs
      - /var/run/docker.sock:/var/run/docker.sock # host and the container will share the same docker engine

networks:
  scraps:
    driver: bridge